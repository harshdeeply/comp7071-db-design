// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hr_webapi.DataAccess;

#nullable disable

namespace hrwebapi.Migrations
{
    [DbContext(typeof(EmployeeContext))]
    [Migration("20231121094225_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EmployeeSchedule", b =>
                {
                    b.Property<Guid>("EmployeesPersonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SchedulesScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("EmployeesPersonId", "SchedulesScheduleId");

                    b.HasIndex("SchedulesScheduleId");

                    b.ToTable("EmployeeSchedule");
                });

            modelBuilder.Entity("hr_webapi.Models.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("hr_webapi.Models.DayOff", b =>
                {
                    b.Property<Guid>("DayOffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("EmployeePersonId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("DayOffId");

                    b.HasIndex("EmployeePersonId");

                    b.ToTable("DayOffs");
                });

            modelBuilder.Entity("hr_webapi.Models.DeductionDetail", b =>
                {
                    b.Property<Guid>("DeductionDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DeductionType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PaychequeId")
                        .HasColumnType("char(36)");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("double");

                    b.HasKey("DeductionDetailId");

                    b.HasIndex("PaychequeId");

                    b.ToTable("DeductionDetails");
                });

            modelBuilder.Entity("hr_webapi.Models.EmploymentEvent", b =>
                {
                    b.Property<Guid>("EmploymentEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<Guid?>("EmployeePersonId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EmploymentEventId");

                    b.HasIndex("EmployeePersonId");

                    b.ToTable("EmploymentEvents");
                });

            modelBuilder.Entity("hr_webapi.Models.PayDetail", b =>
                {
                    b.Property<Guid>("PayDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<double>("Hours")
                        .HasColumnType("double");

                    b.Property<string>("PayType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PaychequeId")
                        .HasColumnType("char(36)");

                    b.Property<double>("Rate")
                        .HasColumnType("double");

                    b.HasKey("PayDetailId");

                    b.HasIndex("PaychequeId");

                    b.ToTable("PayDetails");
                });

            modelBuilder.Entity("hr_webapi.Models.PayInfo", b =>
                {
                    b.Property<Guid>("PayInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DirectDepositAccountNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DirectDepositBranchNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DirectDepositTransitNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("HourlyWage")
                        .HasColumnType("double");

                    b.Property<double>("MaxBreakTime")
                        .HasColumnType("double");

                    b.Property<double>("OvertimeRate")
                        .HasColumnType("double");

                    b.Property<double>("Salary")
                        .HasColumnType("double");

                    b.Property<int>("SickDaysLeft")
                        .HasColumnType("int");

                    b.Property<double>("VacationDaysLeft")
                        .HasColumnType("double");

                    b.HasKey("PayInfoId");

                    b.ToTable("PayInfos");
                });

            modelBuilder.Entity("hr_webapi.Models.Paycheque", b =>
                {
                    b.Property<Guid>("PaychequeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("EmployeePersonId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("PayEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("PayStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("PayTotal")
                        .HasColumnType("double");

                    b.HasKey("PaychequeId");

                    b.HasIndex("EmployeePersonId");

                    b.ToTable("Paycheques");
                });

            modelBuilder.Entity("hr_webapi.Models.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("CurrentAddressAddressId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PersonId");

                    b.HasIndex("CurrentAddressAddressId");

                    b.ToTable("People");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("hr_webapi.Models.Schedule", b =>
                {
                    b.Property<Guid>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ScheduledTimeIn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ScheduledTimeOut")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ScheduleId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("hr_webapi.Models.Shift", b =>
                {
                    b.Property<Guid>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ActualTimeIn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ActualTimeOut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("BreakTimeIn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("BreakTimeOut")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("EmployeePersonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PaychequeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("ShiftId");

                    b.HasIndex("EmployeePersonId");

                    b.HasIndex("PaychequeId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("hr_webapi.Models.EmergencyContact", b =>
                {
                    b.HasBaseType("hr_webapi.Models.Person");

                    b.Property<Guid>("EmergencyContactId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("EmergencyContact");
                });

            modelBuilder.Entity("hr_webapi.Models.Employee", b =>
                {
                    b.HasBaseType("hr_webapi.Models.Person");

                    b.Property<double>("AttendanceRate")
                        .HasColumnType("double");

                    b.Property<Guid?>("EmergencyContactInfoPersonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("EmploymentType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ManagerPersonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PayInfoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("WorkShift")
                        .HasColumnType("double");

                    b.HasIndex("EmergencyContactInfoPersonId");

                    b.HasIndex("ManagerPersonId");

                    b.HasIndex("PayInfoId");

                    b.HasDiscriminator().HasValue("Employee");
                });

            modelBuilder.Entity("EmployeeSchedule", b =>
                {
                    b.HasOne("hr_webapi.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hr_webapi.Models.Schedule", null)
                        .WithMany()
                        .HasForeignKey("SchedulesScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("hr_webapi.Models.DayOff", b =>
                {
                    b.HasOne("hr_webapi.Models.Employee", null)
                        .WithMany("DayOffs")
                        .HasForeignKey("EmployeePersonId");
                });

            modelBuilder.Entity("hr_webapi.Models.DeductionDetail", b =>
                {
                    b.HasOne("hr_webapi.Models.Paycheque", null)
                        .WithMany("Deductions")
                        .HasForeignKey("PaychequeId");
                });

            modelBuilder.Entity("hr_webapi.Models.EmploymentEvent", b =>
                {
                    b.HasOne("hr_webapi.Models.Employee", null)
                        .WithMany("EmploymentEvents")
                        .HasForeignKey("EmployeePersonId");
                });

            modelBuilder.Entity("hr_webapi.Models.PayDetail", b =>
                {
                    b.HasOne("hr_webapi.Models.Paycheque", null)
                        .WithMany("PayDetails")
                        .HasForeignKey("PaychequeId");
                });

            modelBuilder.Entity("hr_webapi.Models.Paycheque", b =>
                {
                    b.HasOne("hr_webapi.Models.Employee", null)
                        .WithMany("PayCheques")
                        .HasForeignKey("EmployeePersonId");
                });

            modelBuilder.Entity("hr_webapi.Models.Person", b =>
                {
                    b.HasOne("hr_webapi.Models.Address", "CurrentAddress")
                        .WithMany()
                        .HasForeignKey("CurrentAddressAddressId");

                    b.Navigation("CurrentAddress");
                });

            modelBuilder.Entity("hr_webapi.Models.Shift", b =>
                {
                    b.HasOne("hr_webapi.Models.Employee", null)
                        .WithMany("Shifts")
                        .HasForeignKey("EmployeePersonId");

                    b.HasOne("hr_webapi.Models.Paycheque", null)
                        .WithMany("Shifts")
                        .HasForeignKey("PaychequeId");

                    b.HasOne("hr_webapi.Models.Schedule", null)
                        .WithMany("Shifts")
                        .HasForeignKey("ScheduleId");
                });

            modelBuilder.Entity("hr_webapi.Models.Employee", b =>
                {
                    b.HasOne("hr_webapi.Models.EmergencyContact", "EmergencyContactInfo")
                        .WithMany()
                        .HasForeignKey("EmergencyContactInfoPersonId");

                    b.HasOne("hr_webapi.Models.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerPersonId");

                    b.HasOne("hr_webapi.Models.PayInfo", "PayInfo")
                        .WithMany()
                        .HasForeignKey("PayInfoId");

                    b.Navigation("EmergencyContactInfo");

                    b.Navigation("Manager");

                    b.Navigation("PayInfo");
                });

            modelBuilder.Entity("hr_webapi.Models.Paycheque", b =>
                {
                    b.Navigation("Deductions");

                    b.Navigation("PayDetails");

                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("hr_webapi.Models.Schedule", b =>
                {
                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("hr_webapi.Models.Employee", b =>
                {
                    b.Navigation("DayOffs");

                    b.Navigation("EmploymentEvents");

                    b.Navigation("PayCheques");

                    b.Navigation("Shifts");
                });
#pragma warning restore 612, 618
        }
    }
}
