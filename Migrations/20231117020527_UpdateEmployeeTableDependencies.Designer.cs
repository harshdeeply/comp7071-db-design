// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hr_webapi.Models;

#nullable disable

namespace hrwebapi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231117020527_UpdateEmployeeTableDependencies")]
    partial class UpdateEmployeeTableDependencies
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("hr_webapi.Models.DayOff", b =>
                {
                    b.Property<Guid>("DayOffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("DayOffId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("DayOff");
                });

            modelBuilder.Entity("hr_webapi.Models.DeductionDetail", b =>
                {
                    b.Property<Guid>("DeductionDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DeductionType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PaychequeId")
                        .HasColumnType("char(36)");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("double");

                    b.HasKey("DeductionDetailId");

                    b.HasIndex("PaychequeId");

                    b.ToTable("DeductionDetail");
                });

            modelBuilder.Entity("hr_webapi.Models.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("AttendanceRate")
                        .HasColumnType("double");

                    b.Property<string>("EmergencyContactName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmergencyContactNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmergencyContactRelationship")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmploymentType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ManagerEmployeeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PayInfoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("WorkShift")
                        .HasColumnType("double");

                    b.HasKey("EmployeeId");

                    b.HasIndex("ManagerEmployeeId");

                    b.HasIndex("PayInfoId")
                        .IsUnique();

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("hr_webapi.Models.EmploymentEvent", b =>
                {
                    b.Property<Guid>("EmploymentEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EmploymentEventId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmploymentEvent");
                });

            modelBuilder.Entity("hr_webapi.Models.PayDetail", b =>
                {
                    b.Property<Guid>("PayDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<double>("Hours")
                        .HasColumnType("double");

                    b.Property<string>("PayType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("PaychequeId")
                        .HasColumnType("char(36)");

                    b.Property<double>("Rate")
                        .HasColumnType("double");

                    b.HasKey("PayDetailId");

                    b.HasIndex("PaychequeId");

                    b.ToTable("PayDetail");
                });

            modelBuilder.Entity("hr_webapi.Models.PayInfo", b =>
                {
                    b.Property<Guid>("PayInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DirectDepositAccountNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DirectDepositBranchNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DirectDepositTransitNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("HourlyWage")
                        .HasColumnType("double");

                    b.Property<double>("MaxBreakTime")
                        .HasColumnType("double");

                    b.Property<double>("OvertimeRate")
                        .HasColumnType("double");

                    b.Property<double>("Salary")
                        .HasColumnType("double");

                    b.Property<int>("SickDaysLeft")
                        .HasColumnType("int");

                    b.Property<double>("VacationDaysLeft")
                        .HasColumnType("double");

                    b.HasKey("PayInfoId");

                    b.ToTable("PayInfo");
                });

            modelBuilder.Entity("hr_webapi.Models.Paycheque", b =>
                {
                    b.Property<Guid>("PaychequeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("PayEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("PayStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("PayTotal")
                        .HasColumnType("double");

                    b.HasKey("PaychequeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Paycheque");
                });

            modelBuilder.Entity("hr_webapi.Models.Shift", b =>
                {
                    b.Property<Guid>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ActualTimeIn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ActualTimeOut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("BreakTimeIn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("BreakTimeOut")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PaychequeId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ScheduledTimeIn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ScheduledTimeOut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("VacationDaysLeft")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ShiftId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PaychequeId");

                    b.ToTable("Shift");
                });

            modelBuilder.Entity("hr_webapi.Models.DayOff", b =>
                {
                    b.HasOne("hr_webapi.Models.Employee", "Employee")
                        .WithMany("DayOffs")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hr_webapi.Models.DeductionDetail", b =>
                {
                    b.HasOne("hr_webapi.Models.Paycheque", null)
                        .WithMany("Deductions")
                        .HasForeignKey("PaychequeId");
                });

            modelBuilder.Entity("hr_webapi.Models.Employee", b =>
                {
                    b.HasOne("hr_webapi.Models.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerEmployeeId");

                    b.HasOne("hr_webapi.Models.PayInfo", "PayInfo")
                        .WithOne("Employee")
                        .HasForeignKey("hr_webapi.Models.Employee", "PayInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("PayInfo");
                });

            modelBuilder.Entity("hr_webapi.Models.EmploymentEvent", b =>
                {
                    b.HasOne("hr_webapi.Models.Employee", null)
                        .WithMany("EmploymentEvents")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("hr_webapi.Models.PayDetail", b =>
                {
                    b.HasOne("hr_webapi.Models.Paycheque", "Paycheque")
                        .WithMany("PayDetails")
                        .HasForeignKey("PaychequeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paycheque");
                });

            modelBuilder.Entity("hr_webapi.Models.Paycheque", b =>
                {
                    b.HasOne("hr_webapi.Models.Employee", "Employee")
                        .WithMany("PayCheques")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hr_webapi.Models.Shift", b =>
                {
                    b.HasOne("hr_webapi.Models.Employee", "Employee")
                        .WithMany("Shifts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hr_webapi.Models.Paycheque", "Paycheque")
                        .WithMany("Shifts")
                        .HasForeignKey("PaychequeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Paycheque");
                });

            modelBuilder.Entity("hr_webapi.Models.Employee", b =>
                {
                    b.Navigation("DayOffs");

                    b.Navigation("EmploymentEvents");

                    b.Navigation("PayCheques");

                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("hr_webapi.Models.PayInfo", b =>
                {
                    b.Navigation("Employee");
                });

            modelBuilder.Entity("hr_webapi.Models.Paycheque", b =>
                {
                    b.Navigation("Deductions");

                    b.Navigation("PayDetails");

                    b.Navigation("Shifts");
                });
#pragma warning restore 612, 618
        }
    }
}
